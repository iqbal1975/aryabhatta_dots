#  _                      _     _ _
# | |__  _   _ _ __  _ __(_) __| | | ___
# | '_ \| | | | '_ \| '__| |/ _` | |/ _ \
# | | | | |_| | |_) | |  | | (_| | |  __/
# |_| |_|\__, | .__/|_|  |_|\__,_|_|\___|
#        |___/|_|
#
# Define Variables
# lock_cmd = notify-send "lock!"              # dbus/sysd lock command (loginctl lock-session)
# unlock_cmd = notify-send "unlock!"          # same as above, but unlock
# before_sleep_cmd = notify-send "Zzz"        # command to run before sleep
# after_sleep_cmd = notify-send "Awake!"      # command to run after sleep
$lock_cmd = pidof hyprlock || hyprlock        # avoid starting multiple hyprlock instances.
$unlock_cmd = notify-send "Unlock!"           # Unlock
$before_sleep_cmd = loginctl lock-session     # lock before suspend.
$after_sleep_cmd = hyprctl dispatch dpms on   # to avoid having to press a key twice to turn on the display
$suspend_cmd = systemctl suspend              # sleep mode

# General parameters
general {
    lock_cmd = $lock_cmd
    unlock_cmd = $unlock_cmd
    before_sleep_cmd = $before_sleep_cmd
    after_sleep_cmd = $after_sleep_cmd
    ignore_dbus_inhibit = false               # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
    ignore_systemd_inhibit = false            # whether to ignore systemd-inhibit --what=idle inhibitors
    suspend_cmd = $suspend_cmd
}

# Reduce Screen Brightness
listener {
    timeout = 540                             # in seconds (9 mins)
    on-timeout = brightnessctl -s set 30      # set monitor backlight to minimum, avoid 0 on OLED monitor.
    on-resume = brightnessctl -r              # monitor backlight restore.
}

# Lock the Screen
listener {
    timeout = 600                             # in seconds (10 mins)
    on-timeout = $lock_cmd                    # command to run when timeout has passed
    # on-resume = notify-send "Welcome back!"   # command to run when activity is detected after timeout has expired.
}

# Switch off Monitor
listener {
    timeout = 1200                            # in seconds (20 mins)
    on-timeout = hyprctl dispatch dpms off    # commad to run when timeout has passed
    on-resume = $after_sleep_cmd              # command to run when activity is detected after timeout has expired.
}

# Suspend
listener {
    timeout = 1800                            # in seconds (30 mins)
    on-timeout = $suspend_cmd                 # command to run when timeout has passed
    on-resume = notify-send "Welcome back!"   # command to run when activity is detected after timeout has expired.
}
