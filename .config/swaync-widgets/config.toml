# swaync config file
swaync_config_file="/home/iqbal/.config/swaync/config.json"
# swaync-widgets css file (generated by this tool)
swaync_css_widgets="/home/iqbal/.config/swaync/widgets.css"
# the command to update swaync after chages in config or css files
swaync_reload_command="swaync-client --reload-css && swaync-client --reload-config"

# css appended before any css rules in the widgets-css file
# css_prepend="@define-color pink rgb(245, 194, 231); @define-color crust rgb(17, 17, 27); @define-color surface0 #313244; @define-color text rgb(205, 214, 244);\n"
css_prepend="@define-color pink #98971a; @define-color crust #ebdbb2; @define-color surface0 #313244; @define-color text #ebdbb2;\n"
# css selector fot the button
css_button_selector=".widget-buttons-grid>flowbox>flowboxchild:nth-child(?)>button"
# css selector fot the button when hover
css_button_hover_selector=".widget-buttons-grid>flowbox>flowboxchild:nth-child(?)>button:hover"
# css selector fot the label
css_label_selector=".widget-buttons-grid>flowbox>flowboxchild:nth-child(?)>button>label"
# css selector fot the label when hover
css_label_hover_selector=".widget-buttons-grid>flowbox>flowboxchild:nth-child(?)>button:hover>label"

# contains css styles for each selector when state is on
[styles_on]
css_button="background: @pink; border: 2px solid @pink"
css_button_hover="background: @pink; border: 2px solid @pink"
css_label="color: @crust;"
css_label_hover="color: @crust;"

# contains css styles for each selector when state is on
[styles_off]
css_button="background: @transparent; border: 2px solid @surface0"
css_button_hover="background: @transparent; border: 2px solid @pink"
css_label="color: @text;"
css_label_hover="color: @pink;"

# [widget-name]
# desc: a description to make `widgets.css` more legible
# index: used on css selector like `div:nth-child(X)`
# off_label: the label when state is off
# on_label: the label when state is on
# turn_on_command: the command that will run when state is off and you call `swaync-widgets widget`
# turn_off_command: the command that will run when state is on and you call `swaync-widgets widget`
# check_status_command: if ouput is empty or return code is not `0`, state is considered off

# each widget represents one entry in "buttons-grid": "actions": [w1, w2, ...]
# widgets
# [[widget]]
# desc="bluetooth"
# index="2"
# off_label="    󰂲    "
# on_label="    󰂯    "
# turn_on_command="rfkill unblock bluetooth"
# turn_off_command="rfkill block bluetooth"
# check_status_command="rfkill list bluetooth | grep \"Soft blocked: no\""

# [[widget]]
# desc="wifi"
# index="3"
# off_label=" WiFi  󱚼 "
# on_label=" WiFi   "
# turn_on_command="nmcli con up id Einstein_5GHz"
# turn_off_command="nmcli con down id Einstein_5GHz"
# check_status_command="nmcli con show --active | grep -i 'wifi'"

[[widget]]
desc="sound"
index="7"
off_label="    󰕾    "
on_label="    󰖁    "
turn_on_command="wpctl set-mute @DEFAULT_AUDIO_SINK@ 1"
turn_off_command="wpctl set-mute @DEFAULT_AUDIO_SINK@ 0"
check_status_command="pactl get-sink-mute @DEFAULT_SINK@ | grep \"yes\""

[[widget]]
desc="mic"
index="8"
off_label="        "
on_label="        "
turn_on_command="wpctl set-mute @DEFAULT_AUDIO_SOURCE@ 1"
turn_off_command="wpctl set-mute @DEFAULT_AUDIO_SOURCE@ 0"
check_status_command="pactl get-source-mute @DEFAULT_SOURCE@ | grep \"yes\""

# [[widget]]
# desc="wifi"
# index="9"
# off_label="        "
# on_label="    󱚼    "
# turn_on_command="nmcli radio wifi off"
# turn_off_command="nmcli radio wifi on"
# check_status_command="nmcli con show --active | grep -i 'wifi'"

# [[widget]]
# desc="vpn"
# index="11"
# off_label=" VPN  "
# on_label=" VPN 󰖂 "
# turn_on_command="nmcli con up id user1"
# turn_off_command="nmcli con down id user1"
# check_status_command="nmcli con show --active | grep -i 'vpn'"
